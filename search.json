[{"path":"https://kwb-r.github.io/kwb.db/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2014-2022 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kwb-r.github.io/kwb.db/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hauke Sonnenberg. Author, maintainer. Michael Rustler. Contributor.            0000-0003-0647-7726 Kompetenzzentrum Wasser Berlin gGmbH. Copyright holder.","code":""},{"path":"https://kwb-r.github.io/kwb.db/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sonnenberg H (2022). kwb.db: Functions supporting data base access. R package version 0.6.0, https://github.com/KWB-R/kwb.db.","code":"@Manual{,   title = {kwb.db: Functions supporting data base access},   author = {Hauke Sonnenberg},   year = {2022},   note = {R package version 0.6.0},   url = {https://github.com/KWB-R/kwb.db}, }"},{"path":"https://kwb-r.github.io/kwb.db/index.html","id":"installation","dir":"","previous_headings":"","what":"Functions supporting data base access","title":"Functions supporting data base access","text":"devtools package installed, can install package kwb.db like :","code":"# If required, install the devtools package... # install.packages(\"devtools\")  # Install kwb.db (and dependent packages) from this GitHub repository devtools::install_github(\"kwb-r/kwb.db\", dependencies = TRUE)"},{"path":"https://kwb-r.github.io/kwb.db/index.html","id":"database-access-in-rodbc","dir":"","previous_headings":"","what":"Database Access in RODBC","title":"Functions supporting data base access","text":"RODBC package, need open database connection, send one requests database finally close database connection.","code":""},{"path":"https://kwb-r.github.io/kwb.db/index.html","id":"database-access-with-this-package","dir":"","previous_headings":"","what":"Database Access with this package","title":"Functions supporting data base access","text":"functions package needed open close database connection explicitly; done behind scenes functions. Instead database connection path database file needs passed functions argument. main functions hsGetTable() hsPutTable(). transfer data database data frame R save data data frame R new table database, respectively. Use hsTables() get list tables available database hsFields() get list table fields contained database table. general workflow look like : kwb.db::-function calls database connection opened, request database sent connection closed . Thus, user care open database connections. Take care getting time series data MS Access database, see therefore hsMdbTimeSeries().","code":"# Define the path to a MS Access datbase file mdb <- \"/path/to/your/database.mdb\"  # Have a look at what tables are contained in the database (tables <- kwb.db::hsTables(mdb))  # For each table, get the vector of available fields (= columns) lapply(tables, kwb.db::hsFields, mdb = mdb)  # Get the content of the first table data <- kwb.db::hsGetTable(mdb, tables[1])  # Do some modifiactions or create somehow else a new data frame data_new <- do_some_fancy_stuff(data)  # Save the new data frame as a new \"fancy_table\" in the database kwb.db::hsPutTable(mdb, data_new, \"fancy_table\")"},{"path":"https://kwb-r.github.io/kwb.db/reference/connectionStringAccess.html","id":null,"dir":"Reference","previous_headings":"","what":"Connection String Access — connectionStringAccess","title":"Connection String Access — connectionStringAccess","text":"Connection String Access","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/connectionStringAccess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connection String Access — connectionStringAccess","text":"","code":"connectionStringAccess(mdb, uid = \"\", pwd = \"\", globalPartialBulkOps = 0)"},{"path":"https://kwb-r.github.io/kwb.db/reference/connectionStringAccess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connection String Access — connectionStringAccess","text":"mdb full path MS Access file uid user id, pwd password, globalPartialBulkOps Long value (read/write) determines behavior Jet database engine SQL DML bulk operations fail. set allow partial completion bulk operations, inconsistent changes can occur, operations records succeed others fail. set allow partial completion bulk operations, changes rolled back single error occurs. Jet OLEDB:Global Partial Bulk Ops property setting can overridden current Recordset object setting Jet OLEDB:Partial Bulk Ops property.Jet OLEDB:Global Partial Bulk Ops Jet OLEDB:Partial Bulk Ops properties can set following values: Default = 0, Partial = 1, Partial = 2","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/connectionStringAccess.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Connection String Access — connectionStringAccess","text":"http://msdn.microsoft.com/en-us/library/office/aa140022%28v=office.10%29.aspx","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/createRDatabaseInterface.html","id":null,"dir":"Reference","previous_headings":"","what":"Create R-Function Interface to Database — createRDatabaseInterface","title":"Create R-Function Interface to Database — createRDatabaseInterface","text":"Create R-Function Interface Database","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/createRDatabaseInterface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create R-Function Interface to Database — createRDatabaseInterface","text":"","code":"createRDatabaseInterface(   db = NULL,   dbSchema = NULL,   tableNamePattern = \"\",   functionPrefix = \"db_\",   pattern = \"^\",   rfile = file.path(tempdir(), \"dbInterface.R\"),   rfile.create = file.path(tempdir(), \"dbInterfaceCreate.R\"),   create.create.functions = FALSE,   dbg = TRUE,   sql.dbg = TRUE )"},{"path":"https://kwb-r.github.io/kwb.db/reference/createRDatabaseInterface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create R-Function Interface to Database — createRDatabaseInterface","text":"db name ODBC data source full path MS Access Excel file dbSchema list structure describing database schema, returned kwb.odm::dbSchema_ODM() tableNamePattern pattern matching names tables/views accessor function generated functionPrefix prefix given generated function. Default: \"db_\" pattern pattern matching part table name replaced functionPrefix. Default: \"^\", .e. prefix appended start table name rfile full path file store data access  functions rfile.create full path file store data creation  functions (relevant crete.create.functions TRUE) create.create.functions logical. TRUE (default FALSE)  data access also data creation functions generated dbg TRUE, progress messages shown creation interface functions sql.dbg TRUE, SQL strings used access database shown calling interface functions","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/currentDb.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Path to or Name of Current Database — currentDb","title":"Get Path to or Name of Current Database — currentDb","text":"Get Path name current database (set  setCurrentDb)","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/currentDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Path to or Name of Current Database — currentDb","text":"","code":"currentDb(dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.db/reference/currentDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Path to or Name of Current Database — currentDb","text":"dbg TRUE, message obout setting current database printed","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/dataFrameToSqlTuples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SQL Tuples from Data Frame — dataFrameToSqlTuples","title":"Create SQL Tuples from Data Frame — dataFrameToSqlTuples","text":"Create SQL Tuples Data Frame","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/dataFrameToSqlTuples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SQL Tuples from Data Frame — dataFrameToSqlTuples","text":"","code":"dataFrameToSqlTuples(newData)"},{"path":"https://kwb-r.github.io/kwb.db/reference/dataFrameToSqlTuples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SQL Tuples from Data Frame — dataFrameToSqlTuples","text":"newData data frame","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/dataFrameToSqlTuples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create SQL Tuples from Data Frame — dataFrameToSqlTuples","text":"vector character strings represents one row newData","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/dataFrameToSqlTuples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create SQL Tuples from Data Frame — dataFrameToSqlTuples","text":"","code":"x <- data.frame(   name = c(\"Peter\", \"Paul\"),    birthday = as.POSIXct(c(\"1981-12-13\", \"2003-01-16\")) )  setCurrentSqlDialect(\"msaccess\") dataFrameToSqlTuples(x) #> [1] \"('Peter',#1981-12-13#)\" \"('Paul',#2003-01-16#)\"   # Note that the representation of a date and time is different in MySQL setCurrentSqlDialect(\"mysql\") dataFrameToSqlTuples(x) #> [1] \"(\\\"Peter\\\",'1981-12-13')\" \"(\\\"Paul\\\",'2003-01-16')\""},{"path":"https://kwb-r.github.io/kwb.db/reference/dumpDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Database Tables to CSV Files — dumpDatabase","title":"Export Database Tables to CSV Files — dumpDatabase","text":"Exports tables database names match given pattern csv files.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/dumpDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Database Tables to CSV Files — dumpDatabase","text":"","code":"dumpDatabase(   db,   pattern = \"^tbl\",   target_dir = NULL,   create_target_dir = FALSE,   sep = \",\",   dec = \".\",   as.is = FALSE,   qmethod = \"double\",   row.names = FALSE,   ... )"},{"path":"https://kwb-r.github.io/kwb.db/reference/dumpDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Database Tables to CSV Files — dumpDatabase","text":"db full path database name ODBC data source pattern pattern matching names tables exported. Default: \"^tbl\", .e. tables starting \"tbl\" target_dir target directory. default new directory created directory mdb resides . new directory name database file dots substituted underscores create_target_dir TRUE, target directory tdir created exist. sep passed write.table dec passed write.table .passed sqlGetResults. TRUE (default FALSE), original data types kept table read R. default types converted appropriate R data  types (e.g. dates converted strings date objects). qmethod passed write.table row.names passed write.table ... arguments passed write.table","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getCurrentSqlDialect.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Current SQL Dialect — getCurrentSqlDialect","title":"Get Current SQL Dialect — getCurrentSqlDialect","text":"Get Current SQL Dialect","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getCurrentSqlDialect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Current SQL Dialect — getCurrentSqlDialect","text":"","code":"getCurrentSqlDialect(warn = TRUE, dbg = FALSE)"},{"path":"https://kwb-r.github.io/kwb.db/reference/getCurrentSqlDialect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Current SQL Dialect — getCurrentSqlDialect","text":"warn TRUE current SQL dialog stored options, program stops error message dbg TRUE, message current SQL dialect printed","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getDatabaseFieldInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Information on Table Field Names and Types — getDatabaseFieldInfo","title":"Get Information on Table Field Names and Types — getDatabaseFieldInfo","text":"Get Information Table Field Names Types","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getDatabaseFieldInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Information on Table Field Names and Types — getDatabaseFieldInfo","text":"","code":"getDatabaseFieldInfo(db)"},{"path":"https://kwb-r.github.io/kwb.db/reference/getDatabaseFieldInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Information on Table Field Names and Types — getDatabaseFieldInfo","text":"db path MS Access MS Excel file name ODBC data source","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getDatabaseFieldInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Information on Table Field Names and Types — getDatabaseFieldInfo","text":"data frame columns TABLE_NAME, COLUMN_NAME,  TYPE_NAME, DECIMAL_DIGITS","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getDatabaseSchema.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Database Schema — getDatabaseSchema","title":"Get Database Schema — getDatabaseSchema","text":"Get Database Schema","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getDatabaseSchema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Database Schema — getDatabaseSchema","text":"","code":"getDatabaseSchema(db, tableNames = NULL, tableTypes = c(\"TABLE\", \"VIEW\"))"},{"path":"https://kwb-r.github.io/kwb.db/reference/getDatabaseSchema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Database Schema — getDatabaseSchema","text":"db full path database (*.mdb, *.xls) name ODBC database tableNames optional. Vector table names tables included tableTypes types database objects included. Default:  c(\"TABLE\", \"VIEW\")","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getDatabaseSchema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Database Schema — getDatabaseSchema","text":"list elements tables relationships. Element tables list o named elements name representing   table names elements lists describing table...","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getFilteredRecords.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Filtered Records — getFilteredRecords","title":"Get Filtered Records — getFilteredRecords","text":"Get Filtered Records","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getFilteredRecords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Filtered Records — getFilteredRecords","text":"","code":"getFilteredRecords(db, tableName, keyValues, fields, like, ...)"},{"path":"https://kwb-r.github.io/kwb.db/reference/getFilteredRecords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Filtered Records — getFilteredRecords","text":"db database name database file tableName name table read records keyValues list key = value pairs keys representing field names table tableName, defining filter criteria fields table fields selected like TRUE SQL LIKE operator used instead equal operator = matching values keyValues  table fields ... additonal arguments passed selectFromDb","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getNamedExcelRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Named Ranges from Excel File — getNamedExcelRanges","title":"Get Named Ranges from Excel File — getNamedExcelRanges","text":"Get Named Ranges Excel File","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getNamedExcelRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Named Ranges from Excel File — getNamedExcelRanges","text":"","code":"getNamedExcelRanges(   file,   pattern = \"^range\",   dbg = TRUE,   stringsAsFactors = FALSE,   ... )"},{"path":"https://kwb-r.github.io/kwb.db/reference/getNamedExcelRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Named Ranges from Excel File — getNamedExcelRanges","text":"file path Excel file pattern pattern matching names named cell ranges read. default, ranges starting range read. dbg logical. TRUE debug messages shown stringsAsFactors passed hsGetTable ... arguments passed hsGetTable","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getNamedExcelRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Named Ranges from Excel File — getNamedExcelRanges","text":"list data frames represents content named cell    range Excel file read  hsGetTable.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getSqlDialect.html","id":null,"dir":"Reference","previous_headings":"","what":"Get SQL Dialect from Given Database — getSqlDialect","title":"Get SQL Dialect from Given Database — getSqlDialect","text":"get SQL dialect (\"mysql\" \"msaccess\") given database","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getSqlDialect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get SQL Dialect from Given Database — getSqlDialect","text":"","code":"getSqlDialect(db, use2007Driver = NULL)"},{"path":"https://kwb-r.github.io/kwb.db/reference/getSqlDialect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get SQL Dialect from Given Database — getSqlDialect","text":"db ODBC database name full path database (mdb xls) use2007Driver passed isMySQL","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getTypeIdentifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Type Identifier — getTypeIdentifier","title":"Get Type Identifier — getTypeIdentifier","text":"Get Type Identifier","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getTypeIdentifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Type Identifier — getTypeIdentifier","text":"","code":"getTypeIdentifier(x)"},{"path":"https://kwb-r.github.io/kwb.db/reference/getTypeIdentifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Type Identifier — getTypeIdentifier","text":"x R object find adequate database object type","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/getTypeIdentifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Type Identifier — getTypeIdentifier","text":"Returns \"int\", \"double\", \"text\", \"date_time\" \"boolean\" depending   data type x","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsClearTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear a Database Table — hsClearTable","title":"Clear a Database Table — hsClearTable","text":"Deletes rows table \\(tbl\\). function performs opening connection, clearing table closing connection. error occurs program stops error description shown.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsClearTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear a Database Table — hsClearTable","text":"","code":"hsClearTable(mdb, tbl, cond = TRUE, ...)"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsClearTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear a Database Table — hsClearTable","text":"mdb full path MS Access database (*.mdb). tbl table name. cond optional: condition. ... additional arguments passed hsSqlQuery, e.g. \"errors=TRUE\"","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsCloseDb.html","id":null,"dir":"Reference","previous_headings":"","what":"Close Connection to MS Access or Excel — hsCloseDb","title":"Close Connection to MS Access or Excel — hsCloseDb","text":"Closes database connection.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsCloseDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Close Connection to MS Access or Excel — hsCloseDb","text":"","code":"hsCloseDb(con)"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsCloseDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Close Connection to MS Access or Excel — hsCloseDb","text":"con Open database connection returned hsOpenDb/odbcConnect","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsCloseMdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Close Connection — hsCloseMdb","title":"Close Connection — hsCloseMdb","text":"Deprecated. Use codehsCloseDb instead.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsCloseMdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Close Connection — hsCloseMdb","text":"","code":"hsCloseMdb(con)"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsCloseMdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Close Connection — hsCloseMdb","text":"con Open database connection returned hsOpenMdb/odbcConnect","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsDropTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop Database Table(s) — hsDropTable","title":"Drop Database Table(s) — hsDropTable","text":"Removes table \\(tbl\\) (permitted). function performs opening connection, dropping table closing connection.  error occurs program stops error description shown.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsDropTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop Database Table(s) — hsDropTable","text":"","code":"hsDropTable(mdb, tbl, isPtrn = FALSE, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsDropTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop Database Table(s) — hsDropTable","text":"mdb full path MS Access database (*.mdb). tbl table name. isPtrn TRUE, tbl interpreted regular expression matching names tables deleted. dbg TRUE, debug messages shown","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsDumpMdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Database Tables to CSV Files — hsDumpMdb","title":"Export Database Tables to CSV Files — hsDumpMdb","text":"Deprecated. Please use dumpDatabase instead.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsDumpMdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Database Tables to CSV Files — hsDumpMdb","text":"","code":"hsDumpMdb(   mdb,   ptrn = \"^tbl\",   tdir = file.path(dirname(mdb), gsub(\"\\\\.\", \"_\", basename(mdb))),   create_target_dir = FALSE )"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsDumpMdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Database Tables to CSV Files — hsDumpMdb","text":"mdb full path database ptrn pattern matching names tables exported. Default: \"^tbl\", .e. tables starting \"tbl\" tdir target directory. default new directory created directory mdb resides . new directory name database file dots substituted underscores create_target_dir TRUE, target directory tdir created exist.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsFields.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Fields in Database Table — hsFields","title":"Available Fields in Database Table — hsFields","text":"Returns vector containing field names database table.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsFields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Fields in Database Table — hsFields","text":"","code":"hsFields(   mdb,   tbl,   namesOnly = TRUE,   chopDollar = TRUE,   ignore.case = (!isMySQL(mdb, use2007Driver = use2007Driver)),   use2007Driver = NULL,   dbg = FALSE )"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsFields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available Fields in Database Table — hsFields","text":"mdb full path MS Access database file (extension “.mdb”  “.accdb”) MS Excel file (extension “.xls”  “.xlsx”). tbl table name. namesOnly TRUE, field names returned, otherwise available information fields. Default: TRUE chopDollar TRUE (default), dollar sign end table name removed sending sqlColumns, ignore.case TRUE, case ignored comparing given table names existing tables. Default: FALSE use2007Driver passed isMySQL dbg TRUE, debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsFields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Fields in Database Table — hsFields","text":"Vector containing field names database table (namesOnly   = TRUE) data.frame columns COLUMN_NAME, DATA_TYPE, TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, NUM_PREC_RADIX, NULLABLE describing   database fields detail, otherwise.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsFields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available Fields in Database Table — hsFields","text":"","code":"if (FALSE) {  ## List the fields of table \"tbl_Hyd\" in the example database ## (only on Windows!)  if (.Platform$OS.type == \"windows\") {   setCurrentSqlDialect(\"msaccess\")   fields <- hsFields(xmdb(), \"tbl_Hyd\")   fields }    ## Ouput: # [1] \"Zeitst\"  \"Q\"       \"v\"       \"H\"       \"T_Kanal\" }"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsGetTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Table from MS Access Database — hsGetTable","title":"Get Table from MS Access Database — hsGetTable","text":"Provides data MS Access database table forms data frame.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsGetTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Table from MS Access Database — hsGetTable","text":"","code":"hsGetTable(   mdb,   tbl,   cond = \"TRUE\",   fields = \"*\",   dbg = TRUE,   check = TRUE,   use2007Driver = NULL,   ... )"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsGetTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Table from MS Access Database — hsGetTable","text":"mdb full path MS Access database file (extension “.mdb”  “.accdb”) MS Excel file (extension “.xls”  “.xlsx”). tbl Table name. Put brackets [] contains spaces mdb point MySQL database cond Condition string. fields Comma separated list names fields selected. dbg TRUE, debug messages shown, else check TRUE (default), tbl checked existence mdb trying get data list available tables shown case table exist. use2007Driver passed hsTables  hsSqlQuery ... Additional arguments passed hsSqlQuery","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsGetTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Table from MS Access Database — hsGetTable","text":"data.frame containing data table database","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsGetTable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Table from MS Access Database — hsGetTable","text":"ATTENTION: function may return want table contains timestamp field. Use hsMdbTimeSeries instead.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsGetTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Table from MS Access Database — hsGetTable","text":"","code":"if (FALSE) {  ## Get all datasets from tbl_Hyd in example database where ## Q > 1.0 m3/s and temperature > 20 degree Celsius ## (only on Windows!)  if (.Platform$OS.type == \"windows\") {   ts <- hsGetTable(xmdb(), \"tbl_Hyd\", \"Q > 1.0 AND T_Kanal > 20\")   head(ts) }    ## Output: # Zeitst     Q     v     H T_Kanal # 1 2011-08-24 22:33:00 1.075 0.459 1.366    20.1 # 2 2011-08-24 22:34:00 1.062 0.453 1.370    20.2 # 3 2011-08-24 22:35:00 1.050 0.449 1.364    20.2 # 4 2011-08-24 22:36:00 1.042 0.446 1.361    20.3 # 5 2011-08-24 22:37:00 1.032 0.443 1.354    20.3 # 6 2011-08-24 22:38:00 1.010 0.436 1.348    20.4    ## TAKE CARE when getting time-series data: if (.Platform$OS.type == \"windows\") {   hsGetTable(xmdb(), \"tblTimestampTest_DST\") }     ## Output: #                tstamp # 1 2011-03-27 01:00:00 # 2 2011-03-27 01:30:00 # 3                <NA> # 4                <NA> # 5 2011-03-27 03:00:00 # 6 2011-03-27 03:30:00    ## As the output shows the timestamps between 02:00:00 and ## 02:59:59 have been set to <NA>. Reason: When retrieving ## date/time data from MS Access, R converts the timestamps ## from a text representation into POSIXct objects. As POSIXct's ## standard time zone seems to be taken from the Windows system ## R tries to convert to Central European Time (CET) which ## does not exist for the hour in which time is switched to ## daylight-saving time (as in the example).    ## This standard behaviour can be changed by setting the ## standard time zone: tz <- Sys.getenv(\"tz\") # save current standard time zone Sys.setenv(tz = \"UTC\") # set standard time zone to UTC    ## The same command as above now delivers all timestamps ## (in Coordinated Universal Time, UTC):  if (.Platform$OS.type == \"windows\") {   hsGetTable(xmdb(), \"tblTimestampTest_DST\") }     ## Output: #                tstamp # 1 2011-03-27 01:00:00 # 2 2011-03-27 01:30:00 # 3 2011-03-27 02:00:00 # 4 2011-03-27 02:30:00 # 5 2011-03-27 03:00:00 # 6 2011-03-27 03:30:00  ## Reset standard time zone Sys.setenv(tz = tz) }"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsGetTimeSeries.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Time Series With Timestamp Info — hsGetTimeSeries","title":"Get Time Series With Timestamp Info — hsGetTimeSeries","text":"Reads time-series data MS Access database table returns data frame containing data. data frame timestamp column contains timestamps converted R (text versions ) original timestamps read MS ACCESS. conversion may fail (e.g. time information gets lost transferring timestamps large data sets R MS Access) function may return different pieces information timestamp forms additional columns, preceding timestamp column, result data frame. Per default, eleven additional columns returned: 1. <ts>_txt (timestamp text), 2. <ts>_Date (date ), 3. <ts>_dSince18991230 (number days since 1899-12-30), 4. <ts>_secInDay (number seconds within day), 5. <ts>_minInDay (number minutes within day), 6. <ts>_year (year), 7. <ts>_month (number month), 8. <ts>_day (number day within month), 9. <ts>_h (hours within day), 10. <ts>_min (minutes within hour), 11. <ts>_s (seconds within minute)  case <ts> name timestamp field.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsGetTimeSeries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Time Series With Timestamp Info — hsGetTimeSeries","text":"","code":"hsGetTimeSeries(   mdb,   tbl,   tsField = hsTsField(mdb, tbl),   fields = \"*\",   minDate = NULL,   maxDate = NULL,   xTsFields = c(1:11),   inclLast = TRUE,   sqlFilter = \"TRUE\",   dbg = FALSE )"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsGetTimeSeries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Time Series With Timestamp Info — hsGetTimeSeries","text":"mdb Full path MS Access database file (*.mdb) tbl Name table containing time-series data. tsField Name table field containing timestamps. fields Vector containing names value fields selected table. vector may may contain name timetamp field. minDate Minimum date (time) time interval selected ISO-Syntax: yyyy-mm-dd [HH:MM:SS], part brackets optional. maxDate Day following maximum date time interval selected, ISO-Syntax: yyyy-mm-dd [HH:MM:SS], part brackets optional. xTsFields Extra timestamp fields selected. Vector containing numbers 1 11, number represents type date/time information described function hsSqlExTsFields. inclLast TRUE, maxDate included result data set, else excluded. sqlFilter additional SQL filter criterion dbg TRUE, debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsGetTimeSeries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Time Series With Timestamp Info — hsGetTimeSeries","text":"data frame containing requested data (timestamp value   columns) additional columns preceding timestamp column containing   different pieces information timestamp.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsGetTimeSeries.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Time Series With Timestamp Info — hsGetTimeSeries","text":"function called internally higher-level function  hsMdbTimeSeries reconstructs correct timestamps different pieces timestamp information provides forms POSIXct objects UTC timezone. Use hsMdbTimeSeries instead want care timestamp conversion problems!","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsGetTimeSeries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Time Series With Timestamp Info — hsGetTimeSeries","text":"","code":"if (FALSE) { ## Get flow time series of 24 of July 2011 from tbl_Hyd in example database ## Additionally to the timestamp that is created by R, return the date only ## (timestamp info id = 2) and the number of minutes within the day ## (timestamp info id = 5).    setCurrentSqlDialect(\"msaccess\")   if (.Platform$OS.type == \"windows\") {   ts <- hsGetTimeSeries(     mdb = xmdb(),     tbl = \"tbl_Hyd\",     tsField = \"Zeitst\",     fields = c(\"Q\", \"v\"),     minDate = \"2011-08-24\",     maxDate = \"2011-08-25\",     xTsFields = c(2, 5),     dbg = TRUE   )       ## Show the last records of the returned dataset.   tail(ts) }     ## Output: #      Zeitst_Date Zeitst_minInDay              Zeitst     Q     v # 1435  2011-08-24            1435 2011-08-24 23:55:00 0.638 0.281 # 1436  2011-08-24            1436 2011-08-24 23:56:00 0.601 0.265 # 1437  2011-08-24            1437 2011-08-24 23:57:00 0.564 0.249 # 1438  2011-08-24            1438 2011-08-24 23:58:00 0.536 0.237 # 1439  2011-08-24            1439 2011-08-24 23:59:00 0.504 0.223 # 1440  2011-08-25               0 2011-08-25 00:00:00 0.483 0.214 }"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsJetDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Date to “mm/dd/yyyy HH:MM:SS” — hsJetDate","title":"Date to “mm/dd/yyyy HH:MM:SS” — hsJetDate","text":"Returns date MS Jet SQL syntax: mm/dd/yyyy HH:MM:SS","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsJetDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date to “mm/dd/yyyy HH:MM:SS” — hsJetDate","text":"","code":"hsJetDate(datetime, dbg = FALSE)"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsJetDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date to “mm/dd/yyyy HH:MM:SS” — hsJetDate","text":"datetime Date (time) information forms Date object POSIX object string. dbg TRUE, debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsLookupOrAddRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup or Add Record — hsLookupOrAddRecord","title":"Lookup or Add Record — hsLookupOrAddRecord","text":"Looks record database table returns ID record. record found inserted table ID new record returned.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsLookupOrAddRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup or Add Record — hsLookupOrAddRecord","text":"","code":"hsLookupOrAddRecord(   mdb,   tbl,   keyAssigns,   fieldAssigns = NULL,   idField = hsFields(mdb, tbl)[1],   dbg = FALSE )"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsLookupOrAddRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup or Add Record — hsLookupOrAddRecord","text":"mdb full path MS Access database tbl name table record looked keyAssigns key-value-assignements used identify record looked . assignments defined forms list, e.g. list(key1 = \"value1\", key2 = \"value2\"). fieldAssigns field-value-assignements used new record needs inserted. assignments defined forms list, e.g. list(field1 = \"value1\", field2 = \"value2\"). idField name ID field, default: name first table field dbg TRUE, debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsMdbTimeSeries.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Mdb time series in UTC — hsMdbTimeSeries","title":"Get Mdb time series in UTC — hsMdbTimeSeries","text":"Reads time-series data MS Access database table returns data frame containing data. name timestamp field must given tsField names value fields selected table must given vector fields. Instead ODBC channel name database must given. function takes care timestamps transferred correctly MS Access R requesting date time information separately MS Access putting together POSIXct object UTC timezone. necessary long data sets RODBC function sqlQuery (function hsSqlQuery calls function) may deliver timestamps time information lacking!","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsMdbTimeSeries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Mdb time series in UTC — hsMdbTimeSeries","text":"","code":"hsMdbTimeSeries(   mdb,   tbl,   tsField = hsTsField(mdb, tbl),   fields = \"*\",   minDate = NULL,   maxDate = NULL,   resolution = \"min\",   inclLast = TRUE,   sqlFilter = \"TRUE\",   dbg = FALSE,   calcType = 1 )"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsMdbTimeSeries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Mdb time series in UTC — hsMdbTimeSeries","text":"mdb Full path MS Access database file (*.mdb) tbl Name table containing time-series data. tsField Name table field containing timestamps. fields Vector containing names value fields selected table. vector may may contain name timetamp field. minDate Minimum date (time) time interval selected ISO-Syntax: yyyy-mm-dd [HH:MM:SS], part brackets optional. maxDate Day following maximum date time interval selected, ISO-Syntax: yyyy-mm-dd [HH:MM:SS], part brackets optional. resolution time resolution: “min” = minutes, “s” = seconds. time resolution “min” timestamps rounded next full minute. inclLast TRUE, maxDate included result data set, else excluded. sqlFilter additional SQL filter criterion dbg TRUE, debug messages shown calcType internal use , change!","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsMdbTimeSeries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Mdb time series in UTC — hsMdbTimeSeries","text":"data.frame POSIXct timestamp column <strTimestamp> (UTC time   zone) value columns selected <strFieldList>","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsMdbTimeSeries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Mdb time series in UTC — hsMdbTimeSeries","text":"","code":"if (FALSE) { ## Get flow time series of 24 of August 2011 from tbl_Hyd in example database  if (.Platform$OS.type == \"windows\") {    ts <- hsMdbTimeSeries(     xmdb(), \"tbl_Hyd\", \"Zeitst\", c(\"Q\", \"v\"), \"2011-08-24\", \"2011-08-25\"   )      ## Show the last records of the returned dataset.   tail(ts) }     ## Output: #                   Zeitst     Q     v # 1435 2011-08-24 23:55:00 0.638 0.281 # 1436 2011-08-24 23:56:00 0.601 0.265 # 1437 2011-08-24 23:57:00 0.564 0.249 # 1438 2011-08-24 23:58:00 0.536 0.237 # 1439 2011-08-24 23:59:00 0.504 0.223 # 1440 2011-08-25 00:00:00 0.483 0.214 }"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsOpenDb.html","id":null,"dir":"Reference","previous_headings":"","what":"Open Connection to MS Access or Excel — hsOpenDb","title":"Open Connection to MS Access or Excel — hsOpenDb","text":"Opens database connection MS Access MS Excel, checks connection stops error.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsOpenDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open Connection to MS Access or Excel — hsOpenDb","text":"","code":"hsOpenDb(src, use2007Driver = NULL, dbg = FALSE, DBMSencoding = \"\", ...)"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsOpenDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open Connection to MS Access or Excel — hsOpenDb","text":"src full path MS Access database file (extension “.mdb”  “.accdb”) MS Excel file (extension “.xls”  “.xlsx”) name ODBC data source. use2007Driver TRUE functions odbcConnectAccess2007 odbcConnectExcel2007 used instead odbcConnectAccess odbcConnectExcel, respectively dbg TRUE connection established details  connection shown. DBMSencoding finally passed odbcDriverConnect. Default: \"\", may want use: \"UTF-8\" ... additional arguments passed odbcConnect...()-function","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsOpenDb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open Connection to MS Access or Excel — hsOpenDb","text":"success object class RODBC describing connection   returned. failure nothing returned program execution stops.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsOpenDb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open Connection to MS Access or Excel — hsOpenDb","text":"","code":"if (FALSE) {  ## Open a connection to the example database ## (only on Windows!)  if (.Platform$OS.type == \"windows\") {    con <- hsOpenDb(xmdb())   con }     ## Details on the established connection are shown: # RODBC Connection 9 # Details: #   case=nochange #   DBQ=C:\\Users\\hsonne\\Documents\\R\\win-library\\2.14\\kwb.base\\... #   Driver={Microsoft Access Driver (*.mdb)} #   DriverId=25 #   FIL=MS Access #   MaxBufferSize=2048 #   PageTimeout=5 #   UID=admin    ## Close the connection again  if (.Platform$OS.type == \"windows\") {    hsCloseDb(con) } }"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsOpenMdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Open Connection to MS Access Database — hsOpenMdb","title":"Open Connection to MS Access Database — hsOpenMdb","text":"Deprecated. Use hsOpenDb instead.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsOpenMdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open Connection to MS Access Database — hsOpenMdb","text":"","code":"hsOpenMdb(mdb, dbg = FALSE)"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsOpenMdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open Connection to MS Access Database — hsOpenMdb","text":"mdb full path MS Access database file. dbg TRUE connection established details connection shown.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsPutTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Data Frame to Database Table — hsPutTable","title":"Save Data Frame to Database Table — hsPutTable","text":"Writes data database table. function performs opening connection, saving data table closing connection.  error occurs program stops error description shown. table named tbl already exists database mdb existing table overwritten overwrite TRUE. Otherwise hsSafeName found table.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsPutTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Data Frame to Database Table — hsPutTable","text":"","code":"hsPutTable(   mdb,   myData,   tbl = \"tblTmp\",   types = NULL,   overwrite = FALSE,   DBMSencoding = \"\",   dbg = TRUE )"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsPutTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Data Frame to Database Table — hsPutTable","text":"mdb full path MS Access database file (*.mdb) myData data.frame containing data written database table tbl Name table created database types field types passed sqlSave argument varTypes, see ?sqlSave details. overwrite shall existing table overwritten? DBMSencoding finally passed odbcDriverConnect. Default: \"\", may want use: \"UTF-8\" dbg TRUE, debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsPutTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Data Frame to Database Table — hsPutTable","text":"case success name created table returned.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsPutTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Data Frame to Database Table — hsPutTable","text":"","code":"if (FALSE) { ## Create a data.frame df1 <- data.frame(id = 1:4, rnd = sample(1:100)[1:4])    ## Write data.frame into a table in the example database; as no ## table name is specified, a table name is generated. The name ## of the table is returned. ## (only on Windows!)  if (.Platform$OS.type == \"windows\") {    tbl <- hsPutTable(xmdb(), df1)   tbl # table name here: [1] \"tblTmp\"        ## Get the data from the created table back again and print the   ## data. As we see, a table containing four different random   ## numbers between one and 100 has been created.   df2 <- hsGetTable(xmdb(), tbl)   df2 }     ## Output: #   id rnd # 1  1  82 # 2  2  14 # 3  3  99 # 4  4   6 }"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSetForeignKey.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Foreign Key for Table Field — hsSetForeignKey","title":"Set Foreign Key for Table Field — hsSetForeignKey","text":"Set foreign key constraint table field","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSetForeignKey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Foreign Key for Table Field — hsSetForeignKey","text":"","code":"hsSetForeignKey(   mdb,   tbl,   field,   ref.tbl,   ref.field,   key.name = .getForeignKeyName(tbl, field, ref.tbl, ref.field),   dbg = FALSE )"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSetForeignKey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Foreign Key for Table Field — hsSetForeignKey","text":"mdb full path MS Access database file (*.mdb) tbl name table containing field foreign key constraint defined field name table field foreign key constraint defined ref.tbl name table containing referenced foreign key field ref.field name foreign key field ref.tbl key.name optional. Name given foreign key dbg passed hsSqlQuery","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSetPrimaryKey.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Primary Key of Database Table — hsSetPrimaryKey","title":"Set Primary Key of Database Table — hsSetPrimaryKey","text":"Sets fields names given vector keyFields key fields  table tbl MS ACCESS database mdb.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSetPrimaryKey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Primary Key of Database Table — hsSetPrimaryKey","text":"","code":"hsSetPrimaryKey(mdb, tbl, keyFields, dbg = FALSE)"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSetPrimaryKey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Primary Key of Database Table — hsSetPrimaryKey","text":"mdb Full path MS Access database file (*.mdb). tbl Name table key fields defined. keyFields (Vector ) key field name(s) dbg TRUE, debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExAnd.html","id":null,"dir":"Reference","previous_headings":"","what":"SQL Expression “AND” — hsSqlExAnd","title":"SQL Expression “AND” — hsSqlExAnd","text":"Creates boolean expression form bFunc(x1) bFunc(x2) ... bFunc(xn). function can used create SQL queries many table fields checked way criterion (see example).","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExAnd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SQL Expression “AND” — hsSqlExAnd","text":"","code":"hsSqlExAnd(x, bFunc)"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExAnd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SQL Expression “AND” — hsSqlExAnd","text":"x vector strings, e.g. representing table field names. bFunc name boolean function “applied” element x.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExAnd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SQL Expression “AND” — hsSqlExAnd","text":"","code":"## Build SQL query finding records in table t in which all ## of the table fields f1 to f100 are NULL. sql <- sprintf(\"SELECT * FROM t WHERE %s\",                 hsSqlExAnd(paste(\"f\", 1:100, sep = \"\"), \"isNull\"))    ## Show the SQL string sql #> [1] \"SELECT * FROM t WHERE (TRUE) AND isNull(f1) AND isNull(f2) AND isNull(f3) AND isNull(f4) AND isNull(f5) AND isNull(f6) AND isNull(f7) AND isNull(f8) AND isNull(f9) AND isNull(f10) AND isNull(f11) AND isNull(f12) AND isNull(f13) AND isNull(f14) AND isNull(f15) AND isNull(f16) AND isNull(f17) AND isNull(f18) AND isNull(f19) AND isNull(f20) AND isNull(f21) AND isNull(f22) AND isNull(f23) AND isNull(f24) AND isNull(f25) AND isNull(f26) AND isNull(f27) AND isNull(f28) AND isNull(f29) AND isNull(f30) AND isNull(f31) AND isNull(f32) AND isNull(f33) AND isNull(f34) AND isNull(f35) AND isNull(f36) AND isNull(f37) AND isNull(f38) AND isNull(f39) AND isNull(f40) AND isNull(f41) AND isNull(f42) AND isNull(f43) AND isNull(f44) AND isNull(f45) AND isNull(f46) AND isNull(f47) AND isNull(f48) AND isNull(f49) AND isNull(f50) AND isNull(f51) AND isNull(f52) AND isNull(f53) AND isNull(f54) AND isNull(f55) AND isNull(f56) AND isNull(f57) AND isNull(f58) AND isNull(f59) AND isNull(f60) AND isNull(f61) AND isNull(f62) AND isNull(f63) AND isNull(f64) AND isNull(f65) AND isNull(f66) AND isNull(f67) AND isNull(f68) AND isNull(f69) AND isNull(f70) AND isNull(f71) AND isNull(f72) AND isNull(f73) AND isNull(f74) AND isNull(f75) AND isNull(f76) AND isNull(f77) AND isNull(f78) AND isNull(f79) AND isNull(f80) AND isNull(f81) AND isNull(f82) AND isNull(f83) AND isNull(f84) AND isNull(f85) AND isNull(f86) AND isNull(f87) AND isNull(f88) AND isNull(f89) AND isNull(f90) AND isNull(f91) AND isNull(f92) AND isNull(f93) AND isNull(f94) AND isNull(f95) AND isNull(f96) AND isNull(f97) AND isNull(f98) AND isNull(f99) AND isNull(f100)\"    ## Output (middle part omitted): # SELECT * FROM t WHERE (TRUE) AND isNull(f1) AND  # isNull(f2) AND isNull(f3) AND ... AND isNull(f100)"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExOr.html","id":null,"dir":"Reference","previous_headings":"","what":"SQL Expression “OR” — hsSqlExOr","title":"SQL Expression “OR” — hsSqlExOr","text":"Creates boolean expression form bFunc(x1) bFunc(x2)  ... bFunc(xn). function can used create SQL queries many table fields checked way criterion (see example).","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExOr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SQL Expression “OR” — hsSqlExOr","text":"","code":"hsSqlExOr(x, bFunc = \"\")"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExOr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SQL Expression “OR” — hsSqlExOr","text":"x vector strings, e.g. representing table field names. bFunc name boolean function “applied” element x.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExOr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SQL Expression “OR” — hsSqlExOr","text":"","code":"## Build SQL query finding records in table t in which at least ## one of the table fields f1 to f100 is NULL. sql <- sprintf(\"SELECT * FROM t WHERE %s\",                 hsSqlExOr(paste(\"f\", 1:100, sep = \"\"), \"isNull\"))    ## Show the SQL string sql #> [1] \"SELECT * FROM t WHERE (FALSE) OR isNull(f1) OR isNull(f2) OR isNull(f3) OR isNull(f4) OR isNull(f5) OR isNull(f6) OR isNull(f7) OR isNull(f8) OR isNull(f9) OR isNull(f10) OR isNull(f11) OR isNull(f12) OR isNull(f13) OR isNull(f14) OR isNull(f15) OR isNull(f16) OR isNull(f17) OR isNull(f18) OR isNull(f19) OR isNull(f20) OR isNull(f21) OR isNull(f22) OR isNull(f23) OR isNull(f24) OR isNull(f25) OR isNull(f26) OR isNull(f27) OR isNull(f28) OR isNull(f29) OR isNull(f30) OR isNull(f31) OR isNull(f32) OR isNull(f33) OR isNull(f34) OR isNull(f35) OR isNull(f36) OR isNull(f37) OR isNull(f38) OR isNull(f39) OR isNull(f40) OR isNull(f41) OR isNull(f42) OR isNull(f43) OR isNull(f44) OR isNull(f45) OR isNull(f46) OR isNull(f47) OR isNull(f48) OR isNull(f49) OR isNull(f50) OR isNull(f51) OR isNull(f52) OR isNull(f53) OR isNull(f54) OR isNull(f55) OR isNull(f56) OR isNull(f57) OR isNull(f58) OR isNull(f59) OR isNull(f60) OR isNull(f61) OR isNull(f62) OR isNull(f63) OR isNull(f64) OR isNull(f65) OR isNull(f66) OR isNull(f67) OR isNull(f68) OR isNull(f69) OR isNull(f70) OR isNull(f71) OR isNull(f72) OR isNull(f73) OR isNull(f74) OR isNull(f75) OR isNull(f76) OR isNull(f77) OR isNull(f78) OR isNull(f79) OR isNull(f80) OR isNull(f81) OR isNull(f82) OR isNull(f83) OR isNull(f84) OR isNull(f85) OR isNull(f86) OR isNull(f87) OR isNull(f88) OR isNull(f89) OR isNull(f90) OR isNull(f91) OR isNull(f92) OR isNull(f93) OR isNull(f94) OR isNull(f95) OR isNull(f96) OR isNull(f97) OR isNull(f98) OR isNull(f99) OR isNull(f100)\"    ## Output (middle part omitted): # SELECT * FROM t WHERE (FALSE) OR isNull(f1) OR  # isNull(f2) OR isNull(f3) OR ... OR isNull(f100)"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTimeCond.html","id":null,"dir":"Reference","previous_headings":"","what":"SQL Expression: Time Period — hsSqlExTimeCond","title":"SQL Expression: Time Period — hsSqlExTimeCond","text":"-condition string MS Jet SQL syntax filtering specific    time interval","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTimeCond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SQL Expression: Time Period — hsSqlExTimeCond","text":"","code":"hsSqlExTimeCond(   tsField,   dateFirst = NULL,   dateLast = NULL,   inclLast = TRUE,   sqlDialect = getCurrentSqlDialect(),   dbg = FALSE )"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTimeCond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SQL Expression: Time Period — hsSqlExTimeCond","text":"tsField name timestamp field dateFirst Date object representing first date time interval selected. dateLast Date object representing last date time interval selected. inclLast TRUE, dateLast included result data set, else excluded. sqlDialect one c(\"mysql\", \"msaccess\") dbg TRUE, debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTimeCond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SQL Expression: Time Period — hsSqlExTimeCond","text":"Condition string MS Jet SQL syntax used clause","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTimeCond.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SQL Expression: Time Period — hsSqlExTimeCond","text":"","code":"if (FALSE) { ## Condition string to filter field \"datetime\" for timestamps  ## between 21 and 22 of July 2010 from <- as.Date(\"2011-08-23\") to   <- as.Date(\"2011-08-24\") cond <- hsSqlExTimeCond(\"Zeitst\", from, to) cond      ## Output: # TRUE  AND Zeitst >= #08/23/2011 00:00:00#   #       AND Zeitst <= #08/24/2011 00:00:00#    ## The condition string may now be used in an SQL query  ## to select data from within the time interval.  sql <- sprintf(\"SELECT * FROM tbl_Hyd WHERE %s\", cond)  if (.Platform$OS.type == \"windows\") {    res <- hsSqlQuery(xmdb(), sql)   head(res) }     ## Output: # Zeitst Q v     H T_Kanal # 1 2011-08-23 00:00:00 0 0 1.260    19.5 # 2 2011-08-23 00:01:00 0 0 1.259    19.5 # 3 2011-08-23 00:02:00 0 0 1.259    19.5 # 4 2011-08-23 00:03:00 0 0 1.259    19.5 # 5 2011-08-23 00:04:00 0 0 1.260    19.5 # 6 2011-08-23 00:05:00 0 0 1.260    19.5 }"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTimeGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"SQL Expression: Time Grouping — hsSqlExTimeGroup","title":"SQL Expression: Time Grouping — hsSqlExTimeGroup","text":"Generates SQL code grouping timestamps years, months days","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTimeGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SQL Expression: Time Grouping — hsSqlExTimeGroup","text":"","code":"hsSqlExTimeGroup(tbl, tsField, interval, cond = \"TRUE\")"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTimeGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SQL Expression: Time Grouping — hsSqlExTimeGroup","text":"tbl name table tsField name table field containing timestamp interval specifies time period group (\"y\": years, \"m\": months, \"d\": days) cond additional condition SQL syntax","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTimeGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SQL Expression: Time Grouping — hsSqlExTimeGroup","text":"Returns SQL code grouping timestamps years, months days","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTimeGroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SQL Expression: Time Grouping — hsSqlExTimeGroup","text":"","code":"## Show SQL query that gets the number of datasets per  ## day (\"d\") considering the condition \"Q > 0\" hsSqlExTimeGroup(\"myTable\", \"myTimestamp\", \"d\", \"Q > 0\") #> [1] \"SELECT DateSerial(Year(hsTS), Month(hsTS), Day(hsTS)) AS myInterval, Count(*) AS myCount FROM (SELECT myTimestamp AS hsTS FROM [myTable] WHERE Q > 0) GROUP BY DateSerial(Year(hsTS), Month(hsTS), Day(hsTS)) ORDER BY DateSerial(Year(hsTS), Month(hsTS), Day(hsTS))\"    ## Output (reformatted):   ## SELECT DateSerial(Year(hsTS), Month(hsTS), Day(hsTS))  ##   AS myInterval, Count(*) AS myCount  ## FROM ( ##     SELECT myTimestamp AS hsTS FROM myTable WHERE Q > 0 ## )  ## GROUP BY DateSerial(Year(hsTS), Month(hsTS), Day(hsTS))  ## ORDER BY DateSerial(Year(hsTS), Month(hsTS), Day(hsTS))"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTsFields.html","id":null,"dir":"Reference","previous_headings":"","what":"SQL Expression: Timestamp Info — hsSqlExTsFields","title":"SQL Expression: Timestamp Info — hsSqlExTsFields","text":"Generates SQL code selecting different parts timestamp","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTsFields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SQL Expression: Timestamp Info — hsSqlExTsFields","text":"","code":"hsSqlExTsFields(tsField, extraTsFields = 0:11)"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTsFields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SQL Expression: Timestamp Info — hsSqlExTsFields","text":"tsField name table field containing timestamp extraTsFields vector integers representing different types time-stamp information: 0 = timestamp POSIXct converted R text representation delivered MS Access,  1 = Timestamp character string,  2 = Date,  3 = number days since 1899-12-30,  4 = number seconds since midnight Date  5 = number minutes since midnight Date  6:8 = year, month, day  9:11 = hours, minutes, seconds","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTsFields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SQL Expression: Timestamp Info — hsSqlExTsFields","text":"Returns SQL code selecting different types information    time stamp.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlExTsFields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SQL Expression: Timestamp Info — hsSqlExTsFields","text":"","code":"hsSqlExTsFields(\"myTimestamp\", c(6:11)) #> [1] \"Year(myTimestamp) AS myTimestamp_year, Month(myTimestamp) AS myTimestamp_month, Day(myTimestamp) AS myTimestamp_day, Hour(myTimestamp) AS myTimestamp_h, Minute(myTimestamp) AS myTimestamp_m, Second(myTimestamp) AS myTimestamp_s\"    ## Output (re-formatted): # \"Year(myTimestamp) AS myTimestamp_year,  #   Month(myTimestamp) AS myTimestamp_month,  #   Day(myTimestamp) AS myTimestamp_day,  #   Hour(myTimestamp) AS myTimestamp_h,  #   Minute(myTimestamp) AS myTimestamp_m,  #   Second(myTimestamp) AS myTimestamp_s\""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"Send SQL Query to Database — hsSqlQuery","title":"Send SQL Query to Database — hsSqlQuery","text":"Get data database requested via SQL query. function performs opening connection, data retieval via SQL closing connection.  error occurs program stops error description shown.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlQuery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send SQL Query to Database — hsSqlQuery","text":"","code":"hsSqlQuery(   mdb,   sql,   use2007Driver = NULL,   dbg = TRUE,   stopOnError = TRUE,   DBMSencoding = \"\",   ... )"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send SQL Query to Database — hsSqlQuery","text":"mdb full path MS Access database file (extension “.mdb”  “.accdb”) MS Excel file (extension “.xls”  “.xlsx”). sql SQL query use2007Driver TRUE functions odbcConnectAccess2007 odbcConnectExcel2007 used instead odbcConnectAccess odbcConnectExcel, respectively dbg TRUE (default), debug messages shown. stopOnError TRUE (default), program stops case error, otherwise warning shown NULL returned. DBMSencoding finally passed odbcDriverConnect. Default: \"\", may want use: \"UTF-8\" ... additional arguments passed sqlQuery","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlQuery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send SQL Query to Database — hsSqlQuery","text":"success, data.frame containing data internally   requested calling RODBC function sqlQuery provided   database returned.  error R stops execution return   anything.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsSqlQuery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send SQL Query to Database — hsSqlQuery","text":"","code":"if (FALSE) { ## Get Q time series from table \"tbl_Hyd\" in example database  if (.Platform$OS.type == \"windows\") {    tsQ <- hsSqlQuery(     xmdb(), \"SELECT Zeitst AS t, Q FROM tbl_Hyd WHERE Q > 1.0\"   )       ## Show the first lines of the resulting data.frame   head(tsQ) }     ## Output # t     Q # 1 2011-08-24 22:27:00 1.061 # 2 2011-08-24 22:28:00 1.091 # 3 2011-08-24 22:29:00 1.115 # 4 2011-08-24 22:30:00 1.092 # 5 2011-08-24 22:31:00 1.086 # 6 2011-08-24 22:32:00 1.074 }"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Available tables in database — hsTables","title":"Available tables in database — hsTables","text":"Returns data.frame returned sqlTables, containing information  tables contained database.  Opening database connection,  getting list tables closing database connection done  within function.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available tables in database — hsTables","text":"","code":"hsTables(   mdb,   excludeSystemTables = grepl(\"\\\\.(mdb|accdb)$\", mdb),   namesOnly = TRUE,   use2007Driver = NULL,   dbg = FALSE )"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available tables in database — hsTables","text":"mdb full path MS Access database file (extension “.mdb”  “.accdb”) MS Excel file (extension “.xls”  “.xlsx”). excludeSystemTables TRUE (default), system tables excluded table list, else included. namesOnly TRUE, table names returned. Default: TRUE use2007Driver TRUE functions odbcConnectAccess2007 odbcConnectExcel2007 used instead odbcConnectAccess odbcConnectExcel, respectively dbg TRUE, debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available tables in database — hsTables","text":"data.frame columns TABLE_CAT, TABLE_SCHEM,  TABLE_NAME, TABLE_TYPE, REMARKS, see sqlTables    RODBC package.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.db/reference/hsTables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available tables in database — hsTables","text":"","code":"if (FALSE) { ## Get names of tables in the example database ## (only on Windows)  if (.Platform$OS.type == \"windows\") {    tnames <- hsTables(xmdb(), namesOnly = TRUE)      ## Exclude system tables by filtering for table names   ## not starting with '^MSys'   tNonSys <- grep(\"^MSys\", tnames, invert = TRUE, value = TRUE)      ## Print the names of the non-system tables.   cat(paste(tNonSys, \"\\n\")) }     ## Ouput: # tbl_Hyd #  tbl_Qua #  ... }"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsTsField.html","id":null,"dir":"Reference","previous_headings":"","what":"Available timestamp-field(s) in database table — hsTsField","title":"Available timestamp-field(s) in database table — hsTsField","text":"Available timestamp-field(s) database table","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/hsTsField.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available timestamp-field(s) in database table — hsTsField","text":"","code":"hsTsField(src, tbl, namesOnly = TRUE, all = FALSE)"},{"path":"https://kwb-r.github.io/kwb.db/reference/hsTsField.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available timestamp-field(s) in database table — hsTsField","text":"src source file (MS Access Excel) tbl table name namesOnly TRUE, name(s) timestamp field(s) () returned, otherwise additional information. TRUE, timestamp fields considiered, otherwise first timestamp field.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/isExcel2003File.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this an XLS file? — isExcel2003File","title":"Is this an XLS file? — isExcel2003File","text":"XLS file?","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/isExcel2003File.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this an XLS file? — isExcel2003File","text":"","code":"isExcel2003File(filepath)"},{"path":"https://kwb-r.github.io/kwb.db/reference/isExcel2003File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is this an XLS file? — isExcel2003File","text":"filepath (vector ) path(s) file(s) checked .xls extension","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/isExcel2003File.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is this an XLS file? — isExcel2003File","text":"(vector ) logical.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/isExcel2007File.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this an XLSX file? — isExcel2007File","title":"Is this an XLSX file? — isExcel2007File","text":"XLSX file?","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/isExcel2007File.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this an XLSX file? — isExcel2007File","text":"","code":"isExcel2007File(filepath)"},{"path":"https://kwb-r.github.io/kwb.db/reference/isExcel2007File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is this an XLSX file? — isExcel2007File","text":"filepath (vector ) path(s) file(s) checked .xlsx extension","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/isExcel2007File.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is this an XLSX file? — isExcel2007File","text":"(vector ) logical.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/isExcelFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this an Excel file? — isExcelFile","title":"Is this an Excel file? — isExcelFile","text":"Excel file?","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/isExcelFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this an Excel file? — isExcelFile","text":"","code":"isExcelFile(filepath)"},{"path":"https://kwb-r.github.io/kwb.db/reference/isExcelFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is this an Excel file? — isExcelFile","text":"filepath (vector ) path(s) file(s) checked .xls .xlsx extension","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/isExcelFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is this an Excel file? — isExcelFile","text":"(vector ) logical.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/isMySQL.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the Given Database of Type MySQL? — isMySQL","title":"Is the Given Database of Type MySQL? — isMySQL","text":"Given Database Type MySQL?","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/isMySQL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the Given Database of Type MySQL? — isMySQL","text":"","code":"isMySQL(db, ..., con = NULL)"},{"path":"https://kwb-r.github.io/kwb.db/reference/isMySQL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the Given Database of Type MySQL? — isMySQL","text":"db database file (*.mdb, *.accdb, *.xls, *.xlsx) name ODBC database ... arguments passed hsOpenDb, e.g. use2007Driver con connection object returned hsOpenDb,  already available. Default: NULL","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/isMySQL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the Given Database of Type MySQL? — isMySQL","text":"TRUE db MySQL database, else FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValueToSql.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate SQL Filter or Assignment Expression — keyValueToSql","title":"Generate SQL Filter or Assignment Expression — keyValueToSql","text":"Generate SQL Filter Assignment Expression","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValueToSql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate SQL Filter or Assignment Expression — keyValueToSql","text":"","code":"keyValueToSql(cname, cvalue, like = TRUE, filter = TRUE)"},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValueToSql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate SQL Filter or Assignment Expression — keyValueToSql","text":"cname field name cvalue field value like TRUE, SQL comparison operator LIKE  instead =. filter TRUE SQL filter expression returned, otherwise  SQL assignment expression","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValueToSql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate SQL Filter or Assignment Expression — keyValueToSql","text":"(vector ) character representing SQL expression","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValueToSql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate SQL Filter or Assignment Expression — keyValueToSql","text":"","code":"cat(kwb.db:::keyValueToSql(\"age\", 1)) #> age = 1 cat(kwb.db:::keyValueToSql(\"name\", \"peter\")) #> name  LIKE  \"peter\" cat(kwb.db:::keyValueToSql(\"name\", \"peter\", like = FALSE)) #> name = \"peter\""},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSql.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Key = Value Pairs to SQL Expressions — keyValuesToSql","title":"List of Key = Value Pairs to SQL Expressions — keyValuesToSql","text":"List Key = Value Pairs SQL Expressions","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Key = Value Pairs to SQL Expressions — keyValuesToSql","text":"","code":"keyValuesToSql(keyValues, filter, like = filter)"},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Key = Value Pairs to SQL Expressions — keyValuesToSql","text":"keyValues list key = value pairs filter logical. TRUE target SQL filter expression, otherwise SQL SET expression. like passed keyValueToSql","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Key = Value Pairs to SQL Expressions — keyValuesToSql","text":"","code":"keyValues <- list(name = \"Peter\", birth = as.POSIXct(\"1999-09-09\"))  setCurrentSqlDialect(\"msaccess\") cat(keyValuesToSql(keyValues, filter = TRUE)) #> name  LIKE  'Peter' AND birth  LIKE  #1999-09-09# cat(keyValuesToSql(keyValues, filter = TRUE, like = FALSE)) #> name = 'Peter' AND birth = #1999-09-09# cat(keyValuesToSql(keyValues, filter = FALSE)) #> name = 'Peter',birth = #1999-09-09#  setCurrentSqlDialect(\"mysql\") cat(keyValuesToSql(keyValues, filter = TRUE)) #> name  LIKE  \"Peter\" AND birth  LIKE  '1999-09-09' cat(keyValuesToSql(keyValues, filter = TRUE, like = FALSE)) #> name = \"Peter\" AND birth = '1999-09-09' cat(keyValuesToSql(keyValues, filter = FALSE)) #> name = \"Peter\",birth = '1999-09-09'"},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSqlAssignment.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Key = Value Pairs to SQL Assignment — keyValuesToSqlAssignment","title":"List of Key = Value Pairs to SQL Assignment — keyValuesToSqlAssignment","text":"List Key = Value Pairs SQL Assignment","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSqlAssignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Key = Value Pairs to SQL Assignment — keyValuesToSqlAssignment","text":"","code":"keyValuesToSqlAssignment(keyValues)"},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSqlAssignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Key = Value Pairs to SQL Assignment — keyValuesToSqlAssignment","text":"keyValues list key = value pairs","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSqlAssignment2.html","id":null,"dir":"Reference","previous_headings":"","what":"Key Values to SQL Assignment (2) — keyValuesToSqlAssignment2","title":"Key Values to SQL Assignment (2) — keyValuesToSqlAssignment2","text":"Key Values SQL Assignment (2)","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSqlAssignment2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key Values to SQL Assignment (2) — keyValuesToSqlAssignment2","text":"","code":"keyValuesToSqlAssignment2(keyvalues)"},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSqlAssignment2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key Values to SQL Assignment (2) — keyValuesToSqlAssignment2","text":"keyvalues list key = value pairs","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSqlAssignment2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key Values to SQL Assignment (2) — keyValuesToSqlAssignment2","text":"list elements fieldList valueList","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSqlFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Key = Value Pairs to SQL Filter Expression — keyValuesToSqlFilter","title":"List of Key = Value Pairs to SQL Filter Expression — keyValuesToSqlFilter","text":"List Key = Value Pairs SQL Filter Expression","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSqlFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Key = Value Pairs to SQL Filter Expression — keyValuesToSqlFilter","text":"","code":"keyValuesToSqlFilter(keyValues, like = FALSE)"},{"path":"https://kwb-r.github.io/kwb.db/reference/keyValuesToSqlFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Key = Value Pairs to SQL Filter Expression — keyValuesToSqlFilter","text":"keyValues list key = value pairs like TRUE, SQL comparison operator LIKE  instead =.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/listValuesToSql.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SQL Tuples from a List — listValuesToSql","title":"Create SQL Tuples from a List — listValuesToSql","text":"Create SQL Tuples List","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/listValuesToSql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SQL Tuples from a List — listValuesToSql","text":"","code":"listValuesToSql(x)"},{"path":"https://kwb-r.github.io/kwb.db/reference/listValuesToSql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SQL Tuples from a List — listValuesToSql","text":"x list defining key = value pairs","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/listValuesToSql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create SQL Tuples from a List — listValuesToSql","text":"vector character strings represents one assignment   x","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/listValuesToSql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create SQL Tuples from a List — listValuesToSql","text":"","code":"x <- list(name = \"Peter\", birthday = as.POSIXct(\"1981-12-13\"))  setCurrentSqlDialect(\"msaccess\") cat(listValuesToSql(x)) #> 'Peter',#1981-12-13#  # Note that the representation of a date and time is different in MySQL setCurrentSqlDialect(\"mysql\") cat(listValuesToSql(x)) #> \"Peter\",'1981-12-13'"},{"path":"https://kwb-r.github.io/kwb.db/reference/lookupRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup Record — lookupRecord","title":"Lookup Record — lookupRecord","text":"Looks record database table returns ID record   NULL record exist.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/lookupRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup Record — lookupRecord","text":"","code":"lookupRecord(   db,   tableName,   keyAssignments,   idField = hsFields(db, tableName)[1],   dbg = FALSE,   use2007Driver = NULL )"},{"path":"https://kwb-r.github.io/kwb.db/reference/lookupRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup Record — lookupRecord","text":"db full path MS Access/Excel database name ODBC data source tableName name table record looked keyAssignments key-value-assignments used identify record looked . assignments defined forms list, e.g. list(key1 = \"value1\", key2 = \"value2\"). idField name ID field, default: name first table field dbg TRUE, debug messages shown use2007Driver passed isMySQL","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/merge_relations.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Table Schema with Relationship Information — merge_relations","title":"Merge Table Schema with Relationship Information — merge_relations","text":"Merge Table Schema Relationship Information","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/merge_relations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Table Schema with Relationship Information — merge_relations","text":"","code":"merge_relations(schemata, relations)"},{"path":"https://kwb-r.github.io/kwb.db/reference/merge_relations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Table Schema with Relationship Information — merge_relations","text":"schemata list returned read_schemata relations data frame returned read_relations","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/openAdequateConnectionOrStop.html","id":null,"dir":"Reference","previous_headings":"","what":"Open Adequate Connection or Stop — openAdequateConnectionOrStop","title":"Open Adequate Connection or Stop — openAdequateConnectionOrStop","text":"Open Adequate Connection Stop","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/openAdequateConnectionOrStop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open Adequate Connection or Stop — openAdequateConnectionOrStop","text":"","code":"openAdequateConnectionOrStop(   db,   use2007Driver = NULL,   dbg = FALSE,   DBMSencoding = \"\",   ... )"},{"path":"https://kwb-r.github.io/kwb.db/reference/openAdequateConnectionOrStop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open Adequate Connection or Stop — openAdequateConnectionOrStop","text":"db database name file use2007Driver TRUE functions odbcConnectAccess2007 odbcConnectExcel2007 used instead odbcConnectAccess odbcConnectExcel, respectively dbg TRUE, debug messages shown DBMSencoding finally passed odbcDriverConnect. Default: \"\", may want use: \"UTF-8\" ... arguments passed odbcConnectionAccess,  odbcConnectionExcel odbcConnect","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/printDatabaseSchema.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Database Schema — printDatabaseSchema","title":"Print Database Schema — printDatabaseSchema","text":"Print Database Schema","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/printDatabaseSchema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Database Schema — printDatabaseSchema","text":"","code":"printDatabaseSchema(dbSchema)"},{"path":"https://kwb-r.github.io/kwb.db/reference/printDatabaseSchema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Database Schema — printDatabaseSchema","text":"dbSchema database schema returned getDatabaseSchema","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/rcode_DatabaseInterface.html","id":null,"dir":"Reference","previous_headings":"","what":"R-code for Functions to Access Database Tables — rcode_DatabaseInterface","title":"R-code for Functions to Access Database Tables — rcode_DatabaseInterface","text":"R-code Functions Access Database Tables","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/rcode_DatabaseInterface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R-code for Functions to Access Database Tables — rcode_DatabaseInterface","text":"","code":"rcode_DatabaseInterface(   db = NULL,   dbSchema = NULL,   tableNamePattern = \"\",   functionPrefix = \"db_\",   pattern = \"^\",   dbg = TRUE,   sql.dbg = TRUE,   create.create.functions = FALSE )"},{"path":"https://kwb-r.github.io/kwb.db/reference/rcode_DatabaseInterface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R-code for Functions to Access Database Tables — rcode_DatabaseInterface","text":"db database name file dbSchema database schema returned getDatabaseSchema tableNamePattern pattern matching names tables/views accessor function generated functionPrefix prefix given generated function. Default: \"db_\" pattern pattern matching part table name replaced functionPrefix. Default: \"^\", .e. prefix appended start table name dbg TRUE, progress messages shown creation interface functions sql.dbg TRUE, SQL strings used access database shown calling interface functions create.create.functions TRUE, functions creating new records database tables created","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/readSqlCommandsFromFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SQL Commands from File — readSqlCommandsFromFile","title":"Read SQL Commands from File — readSqlCommandsFromFile","text":"Lines starting \"--\" \"#\" ignored. SQL commands must separated semicolon end line character (\\n).","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/readSqlCommandsFromFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SQL Commands from File — readSqlCommandsFromFile","text":"","code":"readSqlCommandsFromFile(sqlScript)"},{"path":"https://kwb-r.github.io/kwb.db/reference/readSqlCommandsFromFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SQL Commands from File — readSqlCommandsFromFile","text":"sqlScript full path file containing SQL commands","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/read_relations.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Relations from MSysRelationships Table CSV Export — read_relations","title":"Read Relations from MSysRelationships Table CSV Export — read_relations","text":"Read Relations MSysRelationships Table CSV Export","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/read_relations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Relations from MSysRelationships Table CSV Export — read_relations","text":"","code":"read_relations(file)"},{"path":"https://kwb-r.github.io/kwb.db/reference/read_relations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Relations from MSysRelationships Table CSV Export — read_relations","text":"file path \"MSysRelationships.csv\" exported MS Access right clicking (hidden) MSysRelationships table selecting \"Export->Text file->OK\"","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/read_relations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Relations from MSysRelationships Table CSV Export — read_relations","text":"data frame columns table, field, refTable,  refField","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/read_schemata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Table Schemata from XML Files — read_schemata","title":"Read Table Schemata from XML Files — read_schemata","text":"function reads *_schema.xml files exported folder TBL KWB tool  mdbToTxt.exe","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/read_schemata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Table Schemata from XML Files — read_schemata","text":"","code":"read_schemata(path, reduce = TRUE)"},{"path":"https://kwb-r.github.io/kwb.db/reference/read_schemata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Table Schemata from XML Files — read_schemata","text":"path path folder containing xml files reduce TRUE (default) returned tables reduced  relevant fields","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/renamesToFieldList.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Renamings to Field Selection String — renamesToFieldList","title":"List of Renamings to Field Selection String — renamesToFieldList","text":"Convert list renamings field selection string can used fields argument call hsGetTable","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/renamesToFieldList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Renamings to Field Selection String — renamesToFieldList","text":"","code":"renamesToFieldList(   renames,   source.in.brackets = TRUE,   target.in.brackets = TRUE )"},{"path":"https://kwb-r.github.io/kwb.db/reference/renamesToFieldList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Renamings to Field Selection String — renamesToFieldList","text":"renames list key = value pairs defining renamings keys values source..brackets TRUE (default) source expressions enclosed square brackets: [source] <target> target..brackets TRUE (default) target names enclosed square brackets: <source> [target]","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/renamesToQueries.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Renamings to SQL Queries — renamesToQueries","title":"List of Renamings to SQL Queries — renamesToQueries","text":"Convert list renamings list SQL queries can used select rename given fields database.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/renamesToQueries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Renamings to SQL Queries — renamesToQueries","text":"","code":"renamesToQueries(renamesList)"},{"path":"https://kwb-r.github.io/kwb.db/reference/renamesToQueries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Renamings to SQL Queries — renamesToQueries","text":"renamesList list renaming lists. renaming list list  key = value pairs defining renamings keys values.","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/renamesToQueries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of Renamings to SQL Queries — renamesToQueries","text":"list character represents SQL query","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/runSqlCommandsFromFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Run SQL Commands from File — runSqlCommandsFromFile","title":"Run SQL Commands from File — runSqlCommandsFromFile","text":"Run SQL Commands File","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/runSqlCommandsFromFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run SQL Commands from File — runSqlCommandsFromFile","text":"","code":"runSqlCommandsFromFile(db, sqlFile, ...)"},{"path":"https://kwb-r.github.io/kwb.db/reference/runSqlCommandsFromFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run SQL Commands from File — runSqlCommandsFromFile","text":"db Full path MS Access mdb file ODBC database name sqlFile full path file containing Ms Access SQL commands ... arguments passed hsSqlQuery","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/safeTableName.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe Table Name — safeTableName","title":"Safe Table Name — safeTableName","text":"MS Access: table name enclosed brackets \"[\" \"]\", else: table name enclosed backquotes \"`\"","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/safeTableName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe Table Name — safeTableName","text":"","code":"safeTableName(tableName, sqlDialect = getCurrentSqlDialect(warn = FALSE))"},{"path":"https://kwb-r.github.io/kwb.db/reference/safeTableName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe Table Name — safeTableName","text":"tableName name table quoted sqlDialect one c(\"mysql\", \"msaccess\")","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/selectFromDb.html","id":null,"dir":"Reference","previous_headings":"","what":"Select from Database — selectFromDb","title":"Select from Database — selectFromDb","text":"Select Database","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/selectFromDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select from Database — selectFromDb","text":"","code":"selectFromDb(   tableName,   fields = \"*\",   whereClause = \"TRUE\",   odbc,   dbg = TRUE,   ... )"},{"path":"https://kwb-r.github.io/kwb.db/reference/selectFromDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select from Database — selectFromDb","text":"tableName name database table load data fields names fields selected whereClause SQL condition string odbc database name file dbg TRUE, debug messages shown ... additonal arguments passed hsSqlQuery","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/selectFromTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Select from Table — selectFromTable","title":"Select from Table — selectFromTable","text":"Select Table","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/selectFromTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select from Table — selectFromTable","text":"","code":"selectFromTable(db, tableName, arguments, run = TRUE, ...)"},{"path":"https://kwb-r.github.io/kwb.db/reference/selectFromTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select from Table — selectFromTable","text":"db database name file tableName name table read data arguments list elements select, ,  orderBy elements starting  select_,  where_  orderBy_, respectively run TRUE (default) SQL SELECT statement run otherwise returned character string ... arguments passed hsSqlQuery","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/setCurrentDb.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Current Database — setCurrentDb","title":"Set Current Database — setCurrentDb","text":"Set Current Database","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/setCurrentDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Current Database — setCurrentDb","text":"","code":"setCurrentDb(db)"},{"path":"https://kwb-r.github.io/kwb.db/reference/setCurrentDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Current Database — setCurrentDb","text":"db full path MS Access database ODBC database name","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/setCurrentSqlDialect.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Current SQL Dialect — setCurrentSqlDialect","title":"Set Current SQL Dialect — setCurrentSqlDialect","text":"Set Current SQL Dialect","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/setCurrentSqlDialect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Current SQL Dialect — setCurrentSqlDialect","text":"","code":"setCurrentSqlDialect(dialectName)"},{"path":"https://kwb-r.github.io/kwb.db/reference/setCurrentSqlDialect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Current SQL Dialect — setCurrentSqlDialect","text":"dialectName one \"msaccess\", \"mysql\"","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForInsert.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate SQL INSERT statement — sqlForInsert","title":"Generate SQL INSERT statement — sqlForInsert","text":"Generate SQL INSERT statement","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForInsert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate SQL INSERT statement — sqlForInsert","text":"","code":"sqlForInsert(   tablename,   fields,   sqlSource,   sourceAreValues = !grepl(sqlSource, \"^SELECT\"),   ignore = FALSE )"},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForInsert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate SQL INSERT statement — sqlForInsert","text":"tablename table name fields field names, separated comma sqlSource value tupels form (value1.1, value1.2, value1.3, ...) (value2.1, value2.2, value2.3, ...) ... SQL SELECT statement providing tupels sourceAreValues TRUE, sqlSource expected SQL query providing data inserted -> keyword VALUES generated SQL code ignore TRUE keyword IGNORE inserted INSERT SQL statement -> error given data insert already exists","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForInsertDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate SQL INSERT Statement — sqlForInsertDataFrame","title":"Generate SQL INSERT Statement — sqlForInsertDataFrame","text":"Generate SQL INSERT statement insert values data frame","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForInsertDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate SQL INSERT Statement — sqlForInsertDataFrame","text":"","code":"sqlForInsertDataFrame(tablename, dataFrame, ignore = FALSE, ...)"},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForInsertDataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate SQL INSERT Statement — sqlForInsertDataFrame","text":"tablename table name dataFrame data frame column names representing table field names ignore TRUE keyword IGNORE inserted INSERT SQL statement -> error given data insert already exists ... arguments passed sqlForInsert","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForInsertFromSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"SQL for INSERT FROM SELECT — sqlForInsertFromSelect","title":"SQL for INSERT FROM SELECT — sqlForInsertFromSelect","text":"Generate SQL INSERT statement form INSERT target.table (fields)   SELECT fields source.table","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForInsertFromSelect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SQL for INSERT FROM SELECT — sqlForInsertFromSelect","text":"","code":"sqlForInsertFromSelect(target.table, source.table, fields)"},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForInsertFromSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SQL for INSERT FROM SELECT — sqlForInsertFromSelect","text":"target.table name target table source.table name source table SQL providing source data fields vector character field names","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForInsertIgnoreInMsAccess.html","id":null,"dir":"Reference","previous_headings":"","what":"SQL for ","title":"SQL for ","text":"Returns SQL inserting records table.source yet   contained table.target table.target","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForInsertIgnoreInMsAccess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SQL for ","text":"","code":"sqlForInsertIgnoreInMsAccess(db, table.source, table.target, uniqueFields = NA)"},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForInsertIgnoreInMsAccess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SQL for ","text":"db database name file table.source name source table table.target name target table uniqueFields names unique fields","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate SQL SELECT statement#' — sqlForSelect","title":"Generate SQL SELECT statement#' — sqlForSelect","text":"Generate SQL SELECT statement#'","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForSelect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate SQL SELECT statement#' — sqlForSelect","text":"","code":"sqlForSelect(   tablename,   fields = \"*\",   whereClause = \"TRUE\",   groupBy = \"\",   orderBy = \"\",   sqlDialect = getCurrentSqlDialect() )"},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate SQL SELECT statement#' — sqlForSelect","text":"tablename table name fields expression select fields; field names separated comma alias names may used, just SQL accepts, e.g.: \"tstamp myDateTime, parVal myValue\"; Default: \"*\" whereClause condition; Default: \"TRUE\" groupBy GROUP -clause, Default: \"\" (grouping) orderBy ORDER -clause, Default: \"\" (sorting results) sqlDialect one c(\"mysql\", \"msaccess\")","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForSelectByKey.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate SQL SELECT Statement — sqlForSelectByKey","title":"Generate SQL SELECT Statement — sqlForSelectByKey","text":"Generate SQL SELECT statement (key field values instead clause)","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForSelectByKey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate SQL SELECT Statement — sqlForSelectByKey","text":"","code":"sqlForSelectByKey(tablename, fields = \"*\", keyValues = NULL)"},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForSelectByKey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate SQL SELECT Statement — sqlForSelectByKey","text":"tablename table name fields expression select fields; field names separated comma alias names may used, just SQL accepts, e.g.: \"tstamp myDateTime, parVal myValue\"; Default: \"*\" keyValues list \"key=value\" pairs keys valid field names table","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForUpdate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate SQL UPDATE Statement — sqlForUpdate","title":"Generate SQL UPDATE Statement — sqlForUpdate","text":"Generate SQL UPDATE Statement","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForUpdate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate SQL UPDATE Statement — sqlForUpdate","text":"","code":"sqlForUpdate(tablename, keyValues, whereClause, ignore = FALSE)"},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlForUpdate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate SQL UPDATE Statement — sqlForUpdate","text":"tablename table name keyValues assignments list key=value pairs keys representing valid fields table tablename whereClause condition ignore TRUE keyword IGNORE inserted UPDATE SQL statement -> error given updating fails, e.g. key constraints","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlFullLeftJoin.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge SQL Queries to One Query That Performs a Full Left Join — sqlFullLeftJoin","title":"Merge SQL Queries to One Query That Performs a Full Left Join — sqlFullLeftJoin","text":"Merge SQL Queries One Query Performs Full Left Join","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlFullLeftJoin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge SQL Queries to One Query That Performs a Full Left Join — sqlFullLeftJoin","text":"","code":"sqlFullLeftJoin(sqls, key)"},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlFullLeftJoin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge SQL Queries to One Query That Performs a Full Left Join — sqlFullLeftJoin","text":"sqls list SQL queries expected contain attribute alias giving alias name query key name primary key field, selected SQL query contained sqls","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlFullLeftJoin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge SQL Queries to One Query That Performs a Full Left Join — sqlFullLeftJoin","text":"vector character length one representing result \"left   join\"-ing sub-queries given sqls","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlFullLeftJoin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge SQL Queries to One Query That Performs a Full Left Join — sqlFullLeftJoin","text":"","code":"sql <- sqlFullLeftJoin(key = \"id\", list(   structure(\"SELECT id, field_1 from table_1\", alias = \"t1\"),   structure(\"SELECT id, field_2, field_3 from table_2\", alias = \"t2\"),   structure(\"SELECT id, field_4 from table_3\", alias = \"t3\") ))  cat(sql) #> ( SELECT id, field_1 from table_1 AS t1  #>  LEFT JOIN SELECT id, field_2, field_3 from table_2 AS t2  #>  ON ( t1.id = t2.id ) )   #>  LEFT JOIN SELECT id, field_4 from table_3 AS t3  #>  ON ( t1.id = t3.id )"},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlJoinExpression.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an SQL JOIN Expression — sqlJoinExpression","title":"Create an SQL JOIN Expression — sqlJoinExpression","text":"Create SQL JOIN Expression","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlJoinExpression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an SQL JOIN Expression — sqlJoinExpression","text":"","code":"sqlJoinExpression(left, right, condition, type = \"INNER\")"},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlJoinExpression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an SQL JOIN Expression — sqlJoinExpression","text":"left left part JOIN (e.g. table name) right right part JOIN (e.g. table name) condition condition type one c(\"LEFT\", \"RIGHT\", \"INNER\")","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlLeftJoin.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate SQL for LEFT JOIN — sqlLeftJoin","title":"Generate SQL for LEFT JOIN — sqlLeftJoin","text":"Generate SQL LEFT JOIN","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlLeftJoin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate SQL for LEFT JOIN — sqlLeftJoin","text":"","code":"sqlLeftJoin(sqlSource, tablesAndIDs, fields = \"*\")"},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlLeftJoin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate SQL for LEFT JOIN — sqlLeftJoin","text":"sqlSource SQL subquery provides \"base\" table left tablesAndIDs named character vector names representing names tables joined values representing ID fields tables fields fields selected","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlLeftJoinBody.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate (Base Part of) SQL for LEFT JOIN — sqlLeftJoinBody","title":"Generate (Base Part of) SQL for LEFT JOIN — sqlLeftJoinBody","text":"Generate (Base Part ) SQL LEFT JOIN","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlLeftJoinBody.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate (Base Part of) SQL for LEFT JOIN — sqlLeftJoinBody","text":"","code":"sqlLeftJoinBody(   leftSql,   rightTable,   id,   idLeft = id,   useAlias = (id != idLeft),   aliasName = \"tbase\" )"},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlLeftJoinBody.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate (Base Part of) SQL for LEFT JOIN — sqlLeftJoinBody","text":"leftSql SQL subquery provides \"base\" table left rightTable name \"right\" table id name ID field \"right\" table (must correspond field returned leftSql) idLeft name ID field \"left\" table useAlias TRUE, alias given aliasName given subquery leftSql. Default: FALSE aliasName alias name used useAlias TRUE. Default: \"tbase\"","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlLeftJoinExpression.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an SQL LEFT JOIN Expression — sqlLeftJoinExpression","title":"Create an SQL LEFT JOIN Expression — sqlLeftJoinExpression","text":"Create SQL LEFT JOIN Expression","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlLeftJoinExpression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an SQL LEFT JOIN Expression — sqlLeftJoinExpression","text":"","code":"sqlLeftJoinExpression(left, right, condition)"},{"path":"https://kwb-r.github.io/kwb.db/reference/sqlLeftJoinExpression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an SQL LEFT JOIN Expression — sqlLeftJoinExpression","text":"left left part JOIN (e.g. table name) right right part JOIN (e.g. table name) condition condition","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/xmdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to example database — xmdb","title":"Path to example database — xmdb","text":"Returns full path MS Access example database","code":""},{"path":"https://kwb-r.github.io/kwb.db/reference/xmdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to example database — xmdb","text":"","code":"xmdb()"},{"path":"https://kwb-r.github.io/kwb.db/news/index.html","id":"kwbdb-060-2021-07-07","dir":"Changelog","previous_headings":"","what":"kwb.db 0.6.0 2021-07-07","title":"kwb.db 0.6.0 2021-07-07","text":"getDatabaseSchema(): add arguments “tableNames”, “tableTypes” dumpDatabase(): add argument “.” hsFields(): Try RODBC::sqlColumns() raising error","code":""},{"path":"https://kwb-r.github.io/kwb.db/news/index.html","id":"kwbdb-050-2020-06-19","dir":"Changelog","previous_headings":"","what":"kwb.db 0.5.0 2020-06-19","title":"kwb.db 0.5.0 2020-06-19","text":"Try using RODBC functions first using functions rodb32 package (Since MS Office version 64 Bit RODBC drivers available!) dumpDatabase() sqlForSelectByKey() sqlForUpdate()","code":""},{"path":"https://kwb-r.github.io/kwb.db/news/index.html","id":"kwbdb-040-2019-11-03","dir":"Changelog","previous_headings":"","what":"kwb.db 0.4.0 2019-11-03","title":"kwb.db 0.4.0 2019-11-03","text":"Use package odbc32 Vaclav Hausenblas order use Window’s 32 bit ODBC driver within 64 bit R session. Decrease number exported functions. TODO: Check functions need exported may used scripts /used KWB.","code":""},{"path":"https://kwb-r.github.io/kwb.db/news/index.html","id":"kwbdb-030-2019-06-07","dir":"Changelog","previous_headings":"","what":"kwb.db 0.3.0 (2019-06-07)","title":"kwb.db 0.3.0 (2019-06-07)","text":"give warning using deprecated functions hsOpenMdb(), hsCloseMdb()","code":""},{"path":"https://kwb-r.github.io/kwb.db/news/index.html","id":"kwbdb-020-2019-06-06","dir":"Changelog","previous_headings":"","what":"kwb.db 0.2.0 (2019-06-06)","title":"kwb.db 0.2.0 (2019-06-06)","text":"support 64 Bit odbcConnectionAccess()","code":""},{"path":"https://kwb-r.github.io/kwb.db/news/index.html","id":"kwbdb-011","dir":"Changelog","previous_headings":"","what":"kwb.db 0.1.1","title":"kwb.db 0.1.1","text":"xmdb now points example database package kwb.base","code":""},{"path":"https://kwb-r.github.io/kwb.db/news/index.html","id":"kwbdb-010","dir":"Changelog","previous_headings":"","what":"kwb.db 0.1.0","title":"kwb.db 0.1.0","text":"package created functions originally kwb.base","code":""}]
