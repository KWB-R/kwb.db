# Generated by roxygen2: do not edit by hand

export(createRDatabaseInterface)
export(currentDb)
export(dataFrameToSqlTuples)
export(getCurrentSqlDialect)
export(getNamedExcelRanges)
export(hsClearTable)
export(hsCloseMdb)
export(hsDropTable)
export(hsFields)
export(hsGetTable)
export(hsGetTimeSeries)
export(hsLookupOrAddRecord)
export(hsMdbTimeSeries)
export(hsOpenDb)
export(hsPutTable)
export(hsSetForeignKey)
export(hsSetPrimaryKey)
export(hsSqlExAnd)
export(hsSqlExOr)
export(hsSqlExTimeCond)
export(hsSqlExTimeGroup)
export(hsSqlExTsFields)
export(hsSqlQuery)
export(hsTables)
export(isExcelFile)
export(isMySQL)
export(keyValueToSql)
export(keyValuesToSql)
export(keyValuesToSqlAssignment)
export(keyValuesToSqlAssignment2)
export(listValuesToSql)
export(lookupRecord)
export(renamesToFieldList)
export(renamesToQueries)
export(selectFromTable)
export(setCurrentDb)
export(setCurrentSqlDialect)
export(sqlForInsert)
export(sqlForInsertDataFrame)
export(sqlForInsertFromSelect)
export(sqlForInsertIgnoreInMsAccess)
export(sqlForSelect)
export(sqlFullLeftJoin)
export(sqlJoinExpression)
export(sqlLeftJoinExpression)
export(xmdb)
importFrom(RODBC,odbcConnect)

if(tools:::.OStype() == "windows") {
  importFrom(RODBC,odbcConnectAccess)
  importFrom(RODBC,odbcConnectAccess2007)
  importFrom(RODBC,odbcConnectExcel)
  importFrom(RODBC,odbcConnectExcel2007)
}

importFrom(RODBC,odbcDataSources)
importFrom(RODBC,sqlColumns)
importFrom(RODBC,sqlDrop)
importFrom(RODBC,sqlSave)
importFrom(RODBC,sqlTables)
importFrom(kwb.datetime,hsToPosix)
importFrom(kwb.utils,catAndRun)
importFrom(kwb.utils,catIf)
importFrom(kwb.utils,commaCollapsed)
importFrom(kwb.utils,createDirectory)
importFrom(kwb.utils,defaultIfNULL)
importFrom(kwb.utils,hsQuoteChr)
importFrom(kwb.utils,hsSafeName)
importFrom(kwb.utils,hsTrim)
importFrom(kwb.utils,inRange)
importFrom(kwb.utils,isNullOrEmpty)
importFrom(kwb.utils,printIf)
importFrom(kwb.utils,safePath)
importFrom(kwb.utils,warningDeprecated)
importFrom(kwb.utils,windowsPath)
importFrom(stats,setNames)
importFrom(utils,head)
importFrom(utils,str)
importFrom(utils,write.table)
